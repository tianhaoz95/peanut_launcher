# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: install dependencies
          command: |
            sudo pip install virtualenv
            virtualenv --python=python2 venv
            source venv/bin/activate
            pip install -r requirements.txt
            pip install codecov
            pip install pytest pytest-cov
            pip install pytest-html

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: python version check
          command: |
            source venv/bin/activate
            python --version

      - run:
          name: run native tests
          command: |
            source venv/bin/activate
            rm -rf tests/peanut_launcher
            cp -r peanut_launcher tests
            pytest --rootdir=tests --cov=./ --html=test-results/native/results.html
            
      - run:
          name: generate code coverage report
          command: |
            source venv/bin/activate
            codecov --token=5309a80a-703e-4362-bfe3-90e712821a8c
            
      - run:
          name: run pip tests
          command: |
            source venv/bin/activate
            rm -rf tests/peanut_launcher
            pip install git+https://github.com/tianhaoz95/peanut_launcher.git
            pytest --rootdir=tests --html=test-results/pip/results.html

      - store_artifacts:
          path: test-reports
          destination: test-reports
          
      - store_test_results:
          path: test-results
